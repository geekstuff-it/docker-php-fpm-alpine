#!/bin/bash


IS_MASTER_BUILD=$([ "$SOURCE_BRANCH" == "master" ] && echo 1 || echo 0)
IS_RELEASE_BUILD=$((echo "$SOURCE_BRANCH" | grep -Pq "v[0-9]+\.[0-9]+") && echo 1 || echo 0)

# return list of "<phpFromSource>|<targetTag>" depending if we are building against master or a specific release
getBuildParams() {
  local RELEASE=$(echo $SOURCE_BRANCH | cut -c2-)
  local MAJOR_RELEASE=$(echo $RELEASE | cut -d'.' -f1)
  local MINOR_RELEASE=$(echo $RELEASE | cut -d'.' -f-2)
  local PHP_MINOR=""
  local PHP_TAGS=$(curl 'https://registry.hub.docker.com/v2/repositories/library/php/tags?page_size=1024&name=fpm-alpine' 2>/dev/null | grep -Po "[0-9]+\.[0-9]+\.[0-9]+-fpm-alpine" | sed 's/-fpm-alpine//' | sort -r | uniq)
  local PHP_VERSION=""

  for PHP_MINOR in $(echo "$PHP_TAGS" | grep -Po "^[0-9]+\.[0-9]+" | sort -r | uniq); do
    if [ $IS_MASTER_BUILD -eq 1 ]; then
      echo "${PHP_MINOR}-fpm-alpine|${PHP_MINOR}-master"
    elif [ $IS_RELEASE_BUILD -eq 1 ]; then
      echo "${PHP_MINOR}-fpm-alpine|${PHP_MINOR}"
    fi
  done

  if [ $IS_RELEASE_BUILD -eq 1 ]; then
    for PHP_MINOR in $(echo "$PHP_TAGS" | grep -Po "^[0-9]+\.[0-9]+" | sort -r | uniq); do
      PHP_SPECIFIC=$(echo "$PHP_TAGS" | grep "$PHP_MINOR" | sort -r | head -n1)
      echo "${PHP_SPECIFIC}-fpm-alpine|${PHP_SPECIFIC}"
      echo "${PHP_SPECIFIC}-fpm-alpine|${PHP_SPECIFIC}-v${RELEASE}"
    done
  fi
}
